package com.invest.pro.application.model.master;// default package
// Generated Sep 27, 2015 7:52:02 PM by Hibernate Tools 3.4.0.CR1

import com.google.common.collect.Sets;
import com.invest.pro.application.model.internal.PrimitiveIdAbstractEntity;
import com.invest.pro.application.property.PropertiesHolder;
import com.invest.pro.application.property.info.PrimitiveDataTypePropertyInfo;
import com.invest.pro.application.property.info.PropertyInfo;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import java.util.Set;

/**
 * MDepositeType generated by hbm2java
 */
@Entity
@Table(name = "M_DEPOSITE_TYPE")
public class MDepositeType extends PrimitiveIdAbstractEntity<Long, MDepositeType> {

    private static final EntityProperties properties = new EntityProperties();

    @Column(name = "DEPOSITE_CD")
	private String depositeCd;

    @Column(name = "DEPOSITE_NAME")
	private String depositeName;

    @Column(name = "ACTIVE")
	private Boolean active;

	public String getDepositeCd() {
		return this.depositeCd;
	}

	public void setDepositeCd(String depositeCd) {
		this.depositeCd = depositeCd;
	}

	public String getDepositeName() {
		return this.depositeName;
	}

	public void setDepositeName(String depositeName) {
		this.depositeName = depositeName;
	}

	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

    @Override
    public PropertiesHolder<MDepositeType> getPropertyHolder() {
        return properties;
    }

    private static class EntityProperties implements PropertiesHolder<MDepositeType> {
        private static final Set<PropertyInfo> PROPERTIES_TO_MERGE = Sets.newHashSet(
                (PropertyInfo) new PrimitiveDataTypePropertyInfo<String>(String.class, "depositeCd"),
                (PropertyInfo) new PrimitiveDataTypePropertyInfo<String>(String.class, "depositeName")
        );

        @Override
        public Set<PropertyInfo> getPropertiesInfoToBeMerged() {
            return PROPERTIES_TO_MERGE;
        }
    }
}
